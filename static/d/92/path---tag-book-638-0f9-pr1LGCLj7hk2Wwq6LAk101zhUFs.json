{"data":{"site":{"siteMetadata":{"title":"RayLog"}}},"pageContext":{"posts":[{"html":"<h1>머나먼 완독의 길</h1>\n<h3>별점: ★★★★★</h3>\n<h3>난이도: ★☆☆☆☆</h3>\n<p><img src=\"https://raw.githubusercontent.com/rjs1197/rjs1197.github.io/master/img/code/code.png\" alt=\"code\"></p>\n<h2>각 Chapter 별 리뷰</h2>\n<h4>0. 들어가기 전에</h4>\n<p>어떠한 책을 이야기할 때, 서문을 언급하지 않을 수 없다. 책이 집필되기까지의 역사가 서문에 녹아있는 것이다. 서문을 통해 그가 어떠한 것을 경험하였고, 어떠한 생각으로 이 책을 발간했는지 알 수 있었다.</p>\n<p>우리는 보통 컴퓨터를 배우면서 한 번쯤은 궁금해한다. '어떤 방식으로 동작하는 거지?'라고 말이다. 그런데 보통 잠깐 의문을 품고, 다시 본인이 하던 것에 열중한다. 이 책은 그런 궁금증을 해소하기 위한 책이다.</p>\n<blockquote>\n<p>\"그렇다면 이 책은 '컴퓨터가 동작하는 방법'에 대한 책일까?\" 아니다.</p>\n</blockquote>\n<p>이 책은 지금까지 우리가 접하고, 읽은 평범한 '컴퓨터는 어떻게 동작하는 거지?'에 대한 이야기와는 조금 색다른 방식으로 문제에 접근한다. 가령 컴퓨터의 개론에 관한 이야기를 할 때 빼놓지 않는 이야기는 역시 '애니악이~', '진공관이~'라는 이야기일 것이다.</p>\n<p>그런데 이 책은 '어떤 방식으로 동작하는 거지?'라는 질문으로 시작해 지금까지와는 다른 이야기를 한다. 그래서 필자는 작가가 어떻게 나에게 많은 감동과 깨달음을 주었는가에 대해 앞으로의 Upload를 통해 공유하고자 한다.</p>\n<hr>\n<h4>1. 친구들과의 대화</h4>\n<p>1장은 일반적으로 생각하는 'CODE'의 개념을 달리 볼 기회를 제공해준다. 일반적으로 CODE라 하면 컴퓨터(컴파일러)가 이해할 수 있는 언어(Language)로 된 문장이나 글이라고 생각할 수 있다. 그러나 이장에서 말하는 CODE는 그것보다 더 원초적인 CODE이다. 가령 Morse부호와 점자와 같은 것처럼 말이다. 또한 이러한 CODE가 만들어지게 된 배경에 대해서 가벼운 주제로 이야기해 재미있게 읽을 수 있었다.</p>\n<h4>2. 부호와 조합</h4>\n<p>일반적으로 우리가 생각하는 Morse 부호에 관해 이야기하며 흔히 2진수라 부르는 체계가 어떻게 확립되었는지에 대해 언급한다. 이장을 읽으니 \"아, 이러한 환경에서 발달한 시스템이기에 2진수가 되었구나\"라고 생각할 수 있었다(만약 한국에서 발전했다면 다른 방식으로 발전했겠다고 생각하게 되었다).</p>\n<h4>3. 점자와 이진 부호</h4>\n<p>Morse 부호가 생기기 이전, 현재는 흔히 알고 있는 '점자'가 확립된 과정을 하나의 이야기를 통해 설명한다. 앞선 장의 주제에서 파생하여 6개의 점으로 표현되는 점자가 2의 6승 즉, 64개만큼의 경우의 수를 지니고 있고, 현재 우리가 컴퓨터에서 사용하는 8bit 체계가 이런 형식에서 발전되었다는 것을 알게 되었다.</p>\n<h4>4. 전등을 분해해 봅시다</h4>\n<p>다른 장들에 비교해 시간이 조금 걸렸던 장이다. '전자의 이동'에 대해서 기본적인 지식이 없다 보니 생각하면서 읽을 때 조금 어려웠기 때문이다. 그래도 작가와 옮긴이가 쉽게 풀어 설명하였기에 불편하지 않게 넘어갔다.</p>\n<p>손전등을 만드는 데 필요한 전자적 요소인 전지, 전선, 전구, Switch에 관해 설명하고, 역할을 소개했다(개인적으로 이장에서 중요하다고 생각된 것은 'Switch'였는데 1장으로만 설명한 것이 아쉬웠다).</p>\n<h4>5. 다른 방법을 찾아봅시다</h4>\n<p>저자는 예를 들어서 나와 친구의 집 사이에 전등을 설치하고 내 집에서 신호를 보내면 친구의 집 전등에 불이 들어올 수 있게 하는 과정을 설명했다. 그래서 이 과정을 함께 따라가며 쉽게 전기가 고안되는 것은 원초적인 본능일 수 있었을 것으로 생각하게 되었다.</p>\n<p>이장의 특이점은 'ground'라는 개념에 대한 생각이 바뀌었다는 것이다. '지표면 = 저항이 많다'는 내 생각이 '지표면 = 최고의 전열체'로 바뀌었기 때문이다(컴퓨터를 구성할 때의 ground는 저항이 가장 높은 곳이고, 그렇기 때문에 전기의 흐름이 항상 ground로 간다고 배웠기 때문이다).</p>\n<p>또한 거리의 한계로 인해 이를 해결하기 위한 전신의 발명이 대단하다고 느끼기도 했다(전신에 대해서는 다음 장에서 살펴보자).</p>\n<h4>6. 전신과 릴레이</h4>\n<p>들어가기에 앞서 전신은 새뮤얼 Morse, 그러니까 우리가 흔히 알고 있는 Morse부호를 만든 그분께서 만든 장거리 통신 장치이다. 드디어 6장에 들어와서 장거리 전기 신호 전송의 개념이 생긴 것이다!</p>\n<p>이 부분에서 Morse는 전신을 만들기 위해 1832년부터 1836년까지 4년간 발명을, 1843년 의회를 설득해서 처음으로 공공기관에 전신 장치를 선보였다는 점에서 약 10년 동안 출시가 되지 않았다는 점에서 다시금 위대한 발명이라는 것을 깨달았다. 간단하다고 생각한 전신의 발명이 10년간의 노고 끝에 탄생했다는 것을 말이다.</p>\n<p>이장에서는 '전구를 사용했을까?' 하는 생각을 잠깐 했지만, 책에서는 친절하게 전구는 1879년에 발명되었다고 전한다. 그래서 Morse는 전구를 사용하지 못하고, 전자기를 이용하기로 한다. 일반 철에 전기를 통하게 하는 방식으로 말이다.</p>\n<p>이제 쌍방향 통신이 가능해졌다. 여기서 등장하는 개념이 '릴레이'다. 전선 길이가 길어짐에 따라 저항도 증가하기에 중간에 중계국을 두어 이를 해결하는데 거기서 사용되는 것이 릴레이가 되는 것이다.</p>\n<p>이 점에서 드디어 대륙 내에서의 통신이 가능하게 되었다. 여기까지의 감상은 통신의 발전에 대해서 \"당연히 이런 식으로 발전하는구나\"라고 말하고 싶다. \"과학자들은 어떻게 이런 생각을 하지?\"라는 생각이 이제는 이해되는 것이다.</p>\n<h4>7. 우리가 사용하는 열 개의 숫자들</h4>\n<p>이장에서는 우리가 어떻게 10진수라는 숫자 체계를 사용하게 되었는지 일목요연하게 설명한다. 여기서 새롭게 안 사실은 로마의 수 체계가 우리가 흔히 알고 있는 Alphabet(I=1, V=5, X=10, L=50, C=100, D=500, M=1000)으로 구성되어 있고, 우리가 흔히 알고 있는 '수 체계'가 정의된 배경이었다.</p>\n<p>또한, 컴퓨터에서 사용되는 2진수를 설명하기 전에 2진수를 이해하는데 가장 핵심적인 내용에 대해 언급하는 것이 기억에 남는다.</p>\n<h4>8. 십진수 이외의 것</h4>\n<p>앞선 장에서 십진수 체계에 대해 살펴봤다면 본격적으로 컴퓨터를 연산하는데 필요한 수 체계를 설명한다. 그 설명 과정에서 저자는 8진수 - 4진수 마지막으로는 2진수에 관해 설명하고, 컴퓨터를 구성하는 것에 2진수가 어떻게 사용되는지 간단하게 이야기한다.</p>\n<p>이 부분에서는 가장 간단한 수 체계인 2진수와 그의 친구들(4진수, 8진수)을 소개한다. 아주 어려운 내용이 없이 쉽게 읽히는 구간이었다.</p>\n<h4>9. 비트(bit), 비트, 비트</h4>\n<p>해당 장에서는 비트의 표현 방식에 관해 설명하고 있다. 앞서 배운 2진수를 기반으로 00, 01, 10, 11의 2자리 표현 방식부터 4자리 표현 방식, 카메라 필름의 필름 구분방식, 바코드 인식에 대한 설명이 나온다.</p>\n<p>카메라 필름에 대해 설명을 할 때에는 카메라에 대한 설명이 주가 되어 간단하게 보고 넘어갔다. 필름의 표현 방식에 대해서는 이해하겠지만 자세한 이야기는 이해가 잘 안 되었기 때문일 것이다(2독부터는 이 부분을 참고해야겠다).</p>\n<p>또한 barcode에서는 Parity에 대한 간략한 설명과 바코드가 홀, 짝수 Parity로 구성되고, 마지막에는 특정 연산에 의한 값을 넣어 중복의 불가와 바코드를 속이는 것을 방지한다는 것을 배웠다(사실 이 부분에선 머리만 좋으면 도용할 수 있겠다는 생각도 했다).</p>\n<p>결국, 여기까지 비트로 표현할 수 있는 여러 가지 방법에 대해 살펴보았고, 이런 방식들은 논리학과 연결되어 (부울)Boole 대수의 뼈대가 되었다는 것을 느낄 수 있었다.</p>\n<h4>10. 논리와 스위치(Switch)</h4>\n<p>이번에는 논리식에 대해서 알게 된다. 사실 학부에서 배운 내용이지만 책을 통해 더욱 광범위한 이해가 가능했다. 크게 흥미로운 내용은 없었지만, 만약 이 책을 통해 논리의 개념에 대해 처음 접했다면 '이런 방식으로도 생각할 수 있네?'라고 깨닫게 될 수 있는 내용이 다뤄졌다.</p>\n<h4>11. 빌 게이츠? 논리게이트!</h4>\n<p>사실 앞 장을 읽다 보면 '논리'라는 개념이 뜬구름 잡는 이야기라고 생각할 수 있다. 그러나 이장을 읽고 난 후에 돌이켜보면 정말 소름이 돋게 된다. 사실 학부에서 논리회로를 배울 때만 해도 '이걸 왜 배우지?'라는 생각을 했다. 그런데 이제야 학습의 의의를 찾게 된 것이다.</p>\n<p>이번 장의 내용에 관해 이야기하면 앞서 배운 논리의 개념과 릴레이의 작동 원리가 섞여 논리 게이트라는 개념이 탄생하게 되고, 이 게이트들을 조합해 논리식을 구현할 수 있다는 것을 알려주는 장이다. 드디어 컴퓨터의 뼈대를 찾게 되었다.</p>\n<p>이 책의 첫 장에서부터 지금까지 느끼는 것은 학부의 커리큘럼에 대한 안타까움과 내가 이러한 지식 없이 공부를 했다는 것이 아쉬울 따름이다.</p>\n<h4>12. 이진 덧셈기</h4>\n<p>이번에는 '가산기(덧셈기)'에 대한 이야기를 한다. 논리 게이트를 배우고, 이것을 통해 덧셈 연산을 하는 가산기의 구조를 살펴본다. 이후에는 '반가산기'와 '전가산기'에 대해 배우고 흔히 컴퓨터 과학 개론에서 나올법한 내용이 조금 등장한다. 여기서는 컴퓨터를 구성하는 것의 발전 과정을 간략하게 이해하게 되었고, 앞으로 컴퓨터를 구성하는 것을 학습하면서 필요한 내용을 사전 습득할 수 있었다.</p>\n<h4>13. 그렇다면 뺄셈은 어떨까요?</h4>\n<p>필자는 사실 가산기에 대한 이야기를 처음 접했을 때, '컴퓨터는 뺄셈은 어떻게 할까?'라는 의문이 들었다. 처음에는 이진수의 뺄셈을 생각했지만, 생각하다 보니 마이너스 값에 대해 표기는 할 수 없을 것이라고 단정 지었다. 그 이후에 이번 장을 보니 확실히 이해할 수 있었다.</p>\n<p>이번 장에서는 뺄셈을 위해 보수의 개념과 부호 bit를 설명하고 있다. 의외로 부족했던 부분을 채울 수 있는 시간이 되었다. 특히 '보수'의 개념에 대해서와 (아마도 배우게 될) '바이어스(bias)'에 대한 생각을 다시금 하게 되었다.</p>\n<h4>14. 피드백과 플립플롭(flip-flop)</h4>\n<p>이번 장은 굉장히 까다로운 내용이 등장했다. '컴퓨터 구조(Computer Architecture)'에 대해 공부했지만, 너무 오래된 것이 문제일까 이해하기 까다로운 것들이 등장한 장이었다. 물론 해당 내용을 다 읽고 난 지금은 이해가 되지만, flip-flop을 처음 본 이들이 느낄 이해에 대한 부담감은 말로 설명하기 어려울 것이다.</p>\n<p>이번 장을 읽고 느낀 것은 컴퓨터의 내부적 구조에 대한 고찰과 아직 어떤 분야에 사용할지에 대해서는 의문이지만 아직은 상당히 느리게 동작한다는 것이 불만이었다.</p>\n<p>책을 읽으며 들었던 \"전기가 계속 통한다면 이 전기들은 아예 사라지지 않는 것인가?\" 혹은 \"이런 구조의 컴퓨터라면 정말 느리겠군!\"과 같은 생각들은 14장을 다 읽고 난 이후에는 어렵지 않게 이해할 수 있었다.</p>\n<h4>15. 바이트와 16진수</h4>","id":"a57f8317-caf0-50cb-b301-38e720ae39eb","timeToRead":5,"frontmatter":{"date":"June 28, 2017","path":"/blog/2017-06-26-code-book-review","tags":"book","title":"CODE - Charles Petzold"}}],"tag":"book","pagesSum":1,"page":1}}